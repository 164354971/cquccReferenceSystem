{"remainingRequest":"F:\\cqucc\\cquccReferenceSystem\\cquccReferenceFront\\node_modules\\babel-loader\\lib\\index.js!F:\\cqucc\\cquccReferenceSystem\\cquccReferenceFront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\cqucc\\cquccReferenceSystem\\cquccReferenceFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\cqucc\\cquccReferenceSystem\\cquccReferenceFront\\src\\components\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\cqucc\\cquccReferenceSystem\\cquccReferenceFront\\src\\components\\Login.vue","mtime":1673862010125},{"path":"F:\\cqucc\\cquccReferenceSystem\\cquccReferenceFront\\babel.config.js","mtime":1668948623791},{"path":"F:\\cqucc\\cquccReferenceSystem\\cquccReferenceFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1675055263274},{"path":"F:\\cqucc\\cquccReferenceSystem\\cquccReferenceFront\\node_modules\\babel-loader\\lib\\index.js","mtime":1675055263719},{"path":"F:\\cqucc\\cquccReferenceSystem\\cquccReferenceFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1675055263274},{"path":"F:\\cqucc\\cquccReferenceSystem\\cquccReferenceFront\\node_modules\\vue-loader\\lib\\index.js","mtime":1675055264737}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"F:/cqucc/cquccReferenceSystem/cquccReferenceFront/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"F:/cqucc/cquccReferenceSystem/cquccReferenceFront/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { mapMutations } from \"vuex\";\nexport default {\n  name: 'Login',\n  data: function data() {\n    return {\n      login_msg: '  ',\n      user: {\n        type: 3,\n        username: '',\n        password: ''\n      },\n      code: '',\n      options: [{\n        value: 1,\n        label: '管理员'\n      }, {\n        value: 2,\n        label: '教师'\n      }, {\n        value: 3,\n        label: '学生'\n      }],\n      codeArr: \"123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ123456789\",\n      str: ''\n    };\n  },\n  mounted: function mounted() {\n    this.codeFlush();\n    //alert(this.user.username);\n  },\n\n  methods: _objectSpread(_objectSpread({}, mapMutations(['changeLogin'])), {}, {\n    codeFlush: function codeFlush() {\n      this.str = \"\";\n      for (var i = 0; i <= 3; i++) {\n        var num = Math.abs(Math.floor(Math.random() * this.codeArr.length - 0.00001));\n        console.log(num);\n        this.str += this.codeArr[num];\n      }\n      console.log(this.str);\n      document.getElementById(\"code\").innerText = this.str;\n    },\n    login: function () {\n      var _login = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var str, _yield$this$axios$pos, res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              str = this.str.toLowerCase();\n              /*if (str == this.code){*/\n              if (!true) {\n                _context.next = 26;\n                break;\n              }\n              _context.next = 4;\n              return this.axios.post('/loginChecks/', this.user);\n            case 4:\n              _yield$this$axios$pos = _context.sent;\n              res = _yield$this$axios$pos.data;\n              console.log(res); //如果获取了结果就在控制台打印\n              if (!(res.flag == true)) {\n                _context.next = 24;\n                break;\n              }\n              if (!(res.data == '')) {\n                _context.next = 12;\n                break;\n              }\n              this.login_msg = res.msg;\n              _context.next = 24;\n              break;\n            case 12:\n              //存储token\n              localStorage.setItem('user', JSON.stringify(res.data));\n              this.userToken = 'Bearer ' + this.user.username;\n              // 将用户token保存到vuex中\n              this.changeLogin({\n                user: JSON.stringify(res.data)\n              });\n\n              //跳转到后台主页\n              console.log(res.data);\n              /* this.$router.push({\r\n                  path: '/student',\r\n                  query: {\r\n                      user: res.data\r\n                  },\r\n              }); */\n              _context.t0 = this.user.type;\n              _context.next = _context.t0 === 1 ? 19 : _context.t0 === 2 ? 21 : _context.t0 === 3 ? 22 : 24;\n              break;\n            case 19:\n              this.$router.push({\n                name: 'Admin',\n                path: '/admin',\n                params: {\n                  user: JSON.stringify(res.data)\n                }\n                /*query: {\r\n                    key: 'key',\r\n                    msgKey: this.msg\r\n                }*/\n              });\n              return _context.abrupt(\"break\", 24);\n            case 21:\n              return _context.abrupt(\"break\", 24);\n            case 22:\n              this.$router.push({\n                name: 'Student',\n                path: '/student',\n                params: {\n                  user: JSON.stringify(res.data)\n                }\n                /*query: {\r\n                    key: 'key',\r\n                    msgKey: this.msg\r\n                }*/\n              });\n              return _context.abrupt(\"break\", 24);\n            case 24:\n              _context.next = 28;\n              break;\n            case 26:\n              this.login_msg = \"验证码输入错误!请重新输入\";\n              this.codeFlush();\n            case 28:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function login() {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }()\n  })\n};",{"version":3,"mappings":";;;;;;;;;;;;AAoEA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;QACAC;QACAC;MACA;QACAD;QACAC;MACA;QACAD;QACAC;MACA;MACAC;MACAC;IAEA;EACA;EACAC;IACA;IACA;EACA;;EACAC,yCACAC;IACAC;MACA;MACA;QACA;QACAC;QACA;MACA;MACAA;MACAC;IACA;IACAC;MAAA;QAAA;QAAA;UAAA;YAAA;cACAP;cACA;cAAA,KACA;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACA;YAAA;cAAA;cAAAQ;cACAH;cAAA,MACAG;gBAAA;gBAAA;cAAA;cAAA,MACAA;gBAAA;gBAAA;cAAA;cACA;cAAA;cAAA;YAAA;cAGA;cACAC;cACA;cACA;cACA;gBAAAlB;cAAA;;cAEA;cACAc;cACA;AACA;AACA;AACA;AACA;AACA;cALA,cAMA;cAAA,gCACA,yBAWA,yBACA;cAAA;YAAA;cAZA;gBACAjB;gBACAsB;gBACAC;kBACApB;gBACA;gBACA;AACA;AACA;AACA;cACA;cAAA;YAAA;cAAA;YAAA;cAEA;gBACAH;gBACAsB;gBACAC;kBACApB;gBACA;gBACA;AACA;AACA;AACA;cACA;cAAA;YAAA;cAAA;cAAA;YAAA;cAKA;cACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;AAKA","names":["name","data","login_msg","user","type","username","password","code","options","value","label","codeArr","str","mounted","methods","mapMutations","codeFlush","console","document","login","res","localStorage","path","params"],"sourceRoot":"src/components","sources":["Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"body\">\r\n    <div>\r\n\t\t<div class=\"container\">\r\n\t\t\t<div class=\"tit\">慧监考登录端</div>\r\n\t\t\t<div style=\"color: #ea442b;position: relative;top:-20px\">{{login_msg}}</div>\r\n\t\t\t<input id=\"username\" name=\"username\" type=\"text\" placeholder=\"账号\" v-model.trim=\"user.username\">\r\n\t\t\t<input id=\"password\" name=\"password\" type=\"password\" placeholder=\"密码\" v-model.trim=\"user.password\">\r\n\t\t\t<div>\r\n\t\t\t\t<template>\r\n\t\t\t\t  <el-select v-model=\"user.type\" placeholder=\"请选择\" style=\"width: 92px;margin-right: 8px;\">\r\n\t\t\t\t\t<el-option\r\n\t\t\t\t\t  v-for=\"item in options\"\r\n\t\t\t\t\t  :key=\"item.value\"\r\n\t\t\t\t\t  :label=\"item.label\"\r\n\t\t\t\t\t  :value=\"item.value\">\r\n\t\t\t\t\t</el-option>\r\n\t\t\t\t  </el-select>\r\n\t\t\t\t</template>\r\n\t\t\t\t<input type=\"text\" placeholder=\"验证码\" v-model.trim=\"code\" style=\"width: 90px;\">\r\n\t\t\t\t<code><span id=\"code\" @click=\"codeFlush()\" style=\"\"></span></code>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<button @click=\"login()\" type=\"submit\" style=\"width: 280px;\r\n\t\t\t\theight: 40px;\r\n\t\t\t\tmargin: 35px auto 40px auto;\r\n\t\t\t\tborder: none;\r\n\t\t\t\tbackground: linear-gradient(-200deg, #f8faff, #aac2ee);\r\n\t\t\t\tcolor: #fff;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t\tletter-spacing: 8px;\r\n\t\t\t\tborder-radius: 10px;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\t/*动画过度*/\r\n\t\t\t\ttransition: 0.5s;\">登录</button>\r\n\t\t\t<span>没有账号？<a href=\"#\">去注册</a></span>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"square\">\r\n\t\t<ul>\r\n\t\t\t<li></li>\r\n\t\t\t<li></li>\r\n\t\t\t<li></li>\r\n\t\t\t<li></li>\r\n\t\t\t<li></li>\r\n\t\t</ul>\r\n\t</div>\r\n\t<div class=\"circle\">\r\n\t\t<ul>\r\n\t\t\t<li></li>\r\n\t\t\t<li></li>\r\n\t\t\t<li></li>\r\n\t\t\t<li></li>\r\n\t\t\t<li></li>\r\n\t\t</ul>\r\n\t</div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped src=\"../iconfont/iconfont.css\">\r\n</style>\r\n<style scoped src=\"../css/login.css\">\r\n</style>\r\n<style scoped src=\"../css/common.css\">\r\n</style>\r\n\r\n\r\n<script>\r\nimport {mapMutations} from \"vuex\";\r\n\r\nexport default {\r\n    name: 'Login',\r\n    data() {\r\n        return {\r\n            login_msg: '  ',\r\n            user:{\r\n                type:3,\r\n                username:'',\r\n                password:''\r\n            },\r\n            code:'',\r\n            options: [{\r\n                  value: 1,\r\n                  label: '管理员'\r\n                }, {\r\n                  value: 2,\r\n                  label: '教师'\r\n                }, {\r\n                  value: 3,\r\n                  label: '学生'\r\n                }],\r\n            codeArr:\"123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ123456789\",\r\n            str: ''\r\n\r\n        }\r\n    },\r\n    mounted() {\r\n        this.codeFlush();\r\n        //alert(this.user.username);\r\n    },\r\n    methods: {\r\n        ...mapMutations(['changeLogin']),\r\n        codeFlush(){\r\n            this.str = \"\";\r\n            for(let i = 0; i <= 3; i++){\r\n                var num = Math.abs(Math.floor(Math.random() * this.codeArr.length - 0.00001))\r\n                console.log(num)\r\n                this.str += this.codeArr[num];\r\n            }\r\n            console.log(this.str)\r\n            document.getElementById(\"code\").innerText = this.str;\r\n        },\r\n        async login() {\r\n            var str = this.str.toLowerCase();\r\n            /*if (str == this.code){*/\r\n            if (true){\r\n                const {data: res} = await this.axios.post('/loginChecks/', this.user);\r\n                console.log(res);//如果获取了结果就在控制台打印\r\n                if(res.flag == true){\r\n                    if(res.data == ''){\r\n                        this.login_msg = res.msg;\r\n                    }\r\n                    else{\r\n                        //存储token\r\n                        localStorage.setItem('user', JSON.stringify(res.data));\r\n                        this.userToken = 'Bearer ' + this.user.username;\r\n                        // 将用户token保存到vuex中\r\n                        this.changeLogin({ user: JSON.stringify(res.data) });\r\n\r\n                        //跳转到后台主页\r\n                        console.log(res.data);\r\n                        /* this.$router.push({\r\n                            path: '/student',\r\n                            query: {\r\n                                user: res.data\r\n                            },\r\n                        }); */\r\n                        switch(this.user.type){\r\n                            case 1:this.$router.push({\r\n                                name: 'Admin',\r\n                                path: '/admin',\r\n                                params: {\r\n                                    user: JSON.stringify(res.data)\r\n                                }\r\n                                /*query: {\r\n                                    key: 'key',\r\n                                    msgKey: this.msg\r\n                                }*/\r\n                            });break;\r\n                            case 2:break;\r\n                            case 3:this.$router.push({\r\n                                name: 'Student',\r\n                                path: '/student',\r\n                                params: {\r\n                                    user: JSON.stringify(res.data)\r\n                                }\r\n                                /*query: {\r\n                                    key: 'key',\r\n                                    msgKey: this.msg\r\n                                }*/\r\n                            });break;\r\n                        }\r\n                    }\r\n                }\r\n            }else{\r\n                this.login_msg = \"验证码输入错误!请重新输入\";\r\n                this.codeFlush();\r\n            }\r\n\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\t#code {\r\n\t\tfont-size: 1.2rem;\r\n\t\tpadding: 7px 20px;\r\n\t\tfont-weight: 700;\r\n\t\tbackground-color: #d5d5de;\r\n\t\tmargin-left: 8px;\r\n\t}\r\n</style>\r\n"]}]}